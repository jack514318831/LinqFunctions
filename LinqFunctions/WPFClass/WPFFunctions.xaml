<Window x:Class="LinqFunctions.WPFFunctions"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:LinqFunctions"
        mc:Ignorable="d"
        Title="WPFFunctions" Height="800" Width="1000" ButtonBase.Click  = "Window_Click">
    
    <Window.Resources>
        <!--<SolidColorBrush x:Key = "brushResource" Color = "Blue" />-->
        <SolidColorBrush x:Key="solidcolorbrush" Color="Blue"/>
        <!--<ControlTemplate x:Key = "ButtonTemplate" TargetType = "Button">
            <Grid>
                <Ellipse x:Name = "ButtonEllipse" Height = "100" Width = "150" >
                    <Ellipse.Fill>
                        <LinearGradientBrush StartPoint = "0,0.2" EndPoint = "0.2,1.4">
                            <GradientStop Offset = "0" Color = "Red" />
                            <GradientStop Offset = "1" Color = "Orange" />
                        </LinearGradientBrush>
                    </Ellipse.Fill>
                </Ellipse>
                <ContentPresenter Content = "{TemplateBinding Content}" HorizontalAlignment = "Center" VerticalAlignment = "Center" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property = "IsMouseOver" Value = "True">
                    <Setter TargetName = "ButtonEllipse" Property = "Fill" >
                        <Setter.Value>
                            <LinearGradientBrush StartPoint = "0,0.2" EndPoint = "0.2,1.4">
                                <GradientStop Offset = "0" Color = "YellowGreen" />
                                <GradientStop Offset = "1" Color = "Gold" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property = "IsPressed" Value = "True">
                    <Setter Property = "RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX = "0.8" ScaleY = "0.8" CenterX = "0" CenterY = "0"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property = "RenderTransformOrigin" Value = "0.5,0.5" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>-->
        <ControlTemplate x:Key="ButtonTemplate" TargetType="Button">
            <Grid>
                <Ellipse x:Name="ButtonEllipse" Height="100" Width="150">
                    <Ellipse.Fill>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                            <GradientStop Offset="0" Color="Red"/>
                            <GradientStop Offset="1" Color="Orange"/>
                        </LinearGradientBrush>
                    </Ellipse.Fill>
                </Ellipse>
                <ContentPresenter Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Fill" TargetName="ButtonEllipse">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                <GradientStop Offset="0" Color="YellowGreen"/>
                                <GradientStop Offset="1" Color="Gold"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform CenterX="0" CenterY="0" ScaleX="0.8" ScaleY="0.8"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!--<Style x:Key = "myButtonStyle" TargetType = "Button">
            <Setter Property = "Height" Value = "30" />
            <Setter Property = "Width" Value = "80" />
            <Setter Property = "Foreground" Value = "Blue" />
            <Setter Property = "FontSize" Value = "12" />
            <Setter Property = "Margin" Value = "10" />
        </Style>-->
        <Style x:Key="myButtonStyle" TargetType="Button">
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="80"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Foreground" Value="Green"/>
        </Style>
        <!--<Style x:Key = "TriggerStyle" TargetType = "Button">
            <Setter Property = "Foreground" Value = "Blue" />
            <Style.Triggers>
                <Trigger Property = "IsMouseOver" Value = "True">
                    <Setter Property = "Foreground" Value = "Green" />
                </Trigger>
            </Style.Triggers>
        </Style>-->
        <Style x:Key="TriggerStyle" TargetType="Button">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="Green"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition>
                </ColumnDefinition>
                <ColumnDefinition>
                </ColumnDefinition>
                <ColumnDefinition>
                </ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition>
                </RowDefinition>
                <RowDefinition>
                </RowDefinition>
                <RowDefinition>
                </RowDefinition>
                <RowDefinition>
                </RowDefinition>
                <RowDefinition>
                </RowDefinition>
            </Grid.RowDefinitions>
            <Button Grid.Column="0" Grid.Row="0"  Height = "40" Width = "175" Margin = "10" Content = "Dependency Property" Click="Button_Click">
                <!--<Button.Style>
                    <Style TargetType = "{x:Type Button}">
                        <Style.Triggers>
                            <Trigger Property = "IsMouseOver" Value = "True">
                                <Setter Property = "Foreground" Value = "Red" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>-->
                <Button.Style>
                    <Style TargetType="Button">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="Red"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <StackPanel Grid.Column="0" Grid.Row="1" Margin = "5" ButtonBase.Click = "StackPanel_Click">
                <StackPanel Margin = "5">
                    <TextBlock Name = "txt1" FontSize = "12" Margin = "5" Text = "This is a TextBlock 1" />
                    <TextBlock Name = "txt2" FontSize = "12" Margin = "5" Text = "This is a TextBlock 2" />
                    <TextBlock Name = "txt3" FontSize = "12" Margin = "5" Text = "This is a TextBlock 3" />
                    <Button Name="btnClickMe" Margin = "5" Content = "Click me"  Width = "80" Click="btnClickMe_Click"/>
                </StackPanel>
            </StackPanel>
            <TextBox x:Name = "textBox"  Grid.Column="0" Grid.Row="2" Margin = "10" TextWrapping = "Wrap"  Width = "250"/>
            <StackPanel Grid.Column="1">
                <!--<Rectangle Name="ra1" Height = "40" Margin = "5" Fill = "{StaticResource brushResource}" />
                <Rectangle Name="ra2" Height = "40" Margin = "5" Fill = "{DynamicResource brushResource}" />-->
                <Rectangle Height="30" Margin="5" Fill="{StaticResource solidcolorbrush}"/>
                <Rectangle Height="30" Margin="5" Fill="{DynamicResource solidcolorbrush}"/>
                <Button x:Name = "changeResourceButton" Content = "_Change Resource" Click = "changeResourceButton_Click" />
            </StackPanel>
            <StackPanel Grid.Column="1" Grid.Row="1">
                <!--<Button Content = "Round Button!"
                        Template = "{StaticResource ButtonTemplate}" Width = "150" Margin = "1" />-->
                <Button Content="Round Button" Template="{StaticResource ButtonTemplate}" Width="150" Margin="2"/>
                <Button Content = "Default Button!" Height = "20" Width = "150" Margin = "1" />
            </StackPanel>
            <StackPanel Grid.Column="1" Grid.Row="2">
                <Button Content = "Button1" Style = "{StaticResource myButtonStyle}" />
                <Button Content = "Button2" Style = "{StaticResource myButtonStyle}" />
                <Button Content = "Button3" Style="{StaticResource myButtonStyle}" />
            </StackPanel>
            <StackPanel Grid.Column="0" Grid.Row="3">
                <Button Width = "100" Height = "70" Style="{StaticResource TriggerStyle}" Content = "Trigger"/>
            </StackPanel>
            <StackPanel HorizontalAlignment = "Center" Grid.Column="0" Grid.Row="4">
                <CheckBox x:Name = "redColorCheckBox" Content = "Set red as foreground color" Margin = "20"/>
                <TextBlock Name = "txtblock" VerticalAlignment = "Center" Text = "Event Trigger" FontSize = "24" Margin = "20">
                    <!--<TextBlock.Style>
                        <Style>
                            <Style.Triggers>
                                <DataTrigger Binding = "{Binding ElementName = redColorCheckBox, Path = IsChecked}" Value = "true">
                                    <Setter Property = "TextBlock.Foreground" Value = "Red"/>
                                    <Setter Property = "TextBlock.Cursor" Value = "Hand" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>-->
                    <TextBlock.Style>
                        <Style>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=redColorCheckBox, Path=IsChecked}" Value="True">
                                    <Setter Property="TextBlock.Foreground" Value="Red"/>
                                    <Setter Property="TextBlock.Cursor" Value="Hand"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </StackPanel>
            <Grid Grid.Row="3" Grid.Column="1">
                <Button Content = "Click Me" Width = "60" Height = "30">
                    <!--<Button.Triggers>
                        <EventTrigger RoutedEvent = "Button.Click">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty = "Width" Duration = "0:0:4">
                                            <LinearDoubleKeyFrame Value = "60" KeyTime = "0:0:0"/>
                                            <LinearDoubleKeyFrame Value = "120" KeyTime = "0:0:1"/>
                                            <LinearDoubleKeyFrame Value = "200" KeyTime = "0:0:2"/>
                                            <LinearDoubleKeyFrame Value = "300" KeyTime = "0:0:3"/>
                                        </DoubleAnimationUsingKeyFrames>

                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty = "Height" Duration = "0:0:4">
                                            <LinearDoubleKeyFrame Value = "30" KeyTime = "0:0:0"/>
                                            <LinearDoubleKeyFrame Value = "40" KeyTime = "0:0:1"/>
                                            <LinearDoubleKeyFrame Value = "80" KeyTime = "0:0:2"/>
                                            <LinearDoubleKeyFrame Value = "150" KeyTime = "0:0:3"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </Button.Triggers>-->
                    <Button.Triggers>
                        <EventTrigger RoutedEvent="Button.Click">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Width" Duration="4">
                                            <LinearDoubleKeyFrame Value="60" KeyTime="0"/>
                                            <LinearDoubleKeyFrame Value="120" KeyTime="1"/>
                                            <LinearDoubleKeyFrame Value="180" KeyTime="2"/>
                                            <LinearDoubleKeyFrame Value="240" KeyTime="3"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </Button.Triggers>
                </Button>
            </Grid>
        </Grid>
    </Grid>
</Window>
